################################################################################
# Docker Compose file for starting up the service for testing in GitHub workflow
# This template provides comparable infrastructure to the real environment.
#   - mongodb
#   - localstack (s3, sqs, sns)
#   - zap
#
# Both mongo and localstack have init scripts included for setting up resources
# on startup. These scripts are in docker/scripts.
#
# It also includes a selenium-chrome container for running the browser headless.
#
# The services being tested can either be started up here using the latest
# builds from dockerhub.
# In the example each service has a .env config file in docker/config/
# Services can reference each other by their container names.
# e.g. http://cdp-example-node-backend:3001/
#
################################################################################
name: epr-backend-journey-tests

services:
  ################################################################################
  mongodb:
    image: mongo:6.0.13
    networks:
      - cdp-tenant
    ports:
      - '27017:27017'
    volumes:
      - ./docker/scripts/mongodb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', 'db.hello().ok']
      interval: 5s
      start_period: 5s
      retries: 3
  ################################################################################
  localstack:
    image: localstack/localstack:3.2.0
    environment:
      - LOCALSTACK_HOST=127.0.0.1
      - SERVICES=s3,sqs,sns,dynamodb
      - LS_LOG=WARN
    env_file:
      - ./docker/config/defaults.env
    volumes:
      - ./docker/scripts/localstack:/etc/localstack/init/ready.d
    ports:
      - '4566:4566' # LocalStack Gateway
      - '4510-4559:4510-4559' # external services port range
    healthcheck:
      test: ['CMD', 'curl', 'localhost:4566']
      interval: 5s
      start_period: 5s
      retries: 3
    networks:
      - cdp-tenant
  ################################################################################
  epr-backend:
   image: defradigital/epr-backend:${EPR_BACKEND:-latest}
   build:
     context: .
     target: development
   env_file:
     - ./docker/config/defaults.env
     - ./docker/config/example-backend.env
   environment:
     PORT: 3001
     NODE_ENV: development
     LOCALSTACK_ENDPOINT: http://localstack:4566
     MONGO_URI: mongodb://mongodb:27017/
     GOVUK_NOTIFY_API_KEY: /run/secrets/govuk_notify_api_key
     AUDIT_ENABLED: true
     FEATURE_FLAG_SUMMARY_LOGS: true
     FEATURE_FLAG_ORGANISATIONS: true
     LOG_FORMAT: ecs
   ports:
     - '3001:3001'
   depends_on:
     mongodb:
       condition: service_healthy
   healthcheck:
     test: ["CMD", "curl", "http://localhost:3001/health"]
     interval: 3s
     start_period: 2s
     retries: 3
   networks:
     - cdp-tenant

  zap:
    image: zaproxy/zap-stable:latest
    command: zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true -config api.key=zap-api-key
    environment:
      - ZAP_PORT=8080
    volumes:
      - ./zap-reports:/zap/wrk:rw
    ports:
      - "8080:8080"
    networks:
      - cdp-tenant

networks:
  cdp-tenant:
    driver: bridge
    name: cdp-tenant
